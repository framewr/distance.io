{
  "author": {
    "name": "mattbornski"
  },
  "contributors": [
    {
      "name": "Alan Gutierrez",
      "email": "alan@prettyrobots.com",
      "url": "http://github.com/bigeasy"
    },
    {
      "name": "Philipp Fehre",
      "email": "philipp.fehre@googlemail.com",
      "url": "http://github.com/sideshowcoder"
    }
  ],
  "name": "tzwhere",
  "description": "Determine timezone from lat/long",
  "version": "1.0.0",
  "main": "lib/index.js",
  "directories": {
    "lib": "lib",
    "test": "test"
  },
  "keywords": [
    "timezone",
    "tz",
    "latitude",
    "lat",
    "longitude",
    "long",
    "lon",
    "geojson"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/mattbornski/tzwhere.git"
  },
  "engines": {
    "node": ">= 0.6"
  },
  "dependencies": {
    "geolib": "1.2.5",
    "simplesets": "1.2.0",
    "timezone": "0.0.19"
  },
  "devDependencies": {
    "mocha": "1.x"
  },
  "scripts": {
    "test": "for i in `ls test/*.js`; do mocha $i; done"
  },
  "readme": "# tzwhere [![Build Status](https://travis-ci.org/mattbornski/tzwhere.png)](http://travis-ci.org/mattbornski/tzwhere)\n\nDetermine timezone from lat/long in NodeJS\n\n## Installation\n\n### Installing tzwhere\n```\nnpm install tzwhere\n```\n\n## Example Usage\n\n```javascript\nvar tzwhere = require('tzwhere')\ntzwhere.init();\n\nvar whiteHouse = {'lat': 38.897663, 'lng': -77.036562};\n\n// Determine the timezone of the White House\nconsole.log(tzwhere.tzNameAt(whiteHouse['lat'], whiteHouse['lng']));\n\n// Determine the current offset from UTC, in milliseconds, of the White House's timezone\nconsole.log(tzwhere.tzOffsetAt(whiteHouse['lat'], whiteHouse['lng']));\n```\n\nyields:\n\n```bash\nAmerica/New_York\n-14400000\n```\n\nor\n\n```bash\nAmerica/New_York\n-18000000\n```\n\ndepending on the current state of daylight savings time in the America/New_York timezone.  You can also do it asynchronously.\n\n```javascript\n...\ntzwhere.tzNameAt(whiteHouse['lat'], whiteHouse['lng'], function (error, result) {\n\tif (error) {\n\t\tconsole.log(error);\n\t} else {\n\t\tconsole.log(result);\n\t}\n}\n...\n```\n\nYou can also pass alternative GeoJSON shape files:\n\n```javascript\nvar tzwhere = require('tzwhere')\ntzwhere.init('path/to/alternative/tz/file');\n\n...\n```\n\nCheck the tests for more comprehensive usage, including determining the timezone offsets at arbitrary dates (very useful for scheduling future events expressed in local time).\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mattbornski/tzwhere/issues"
  },
  "homepage": "https://github.com/mattbornski/tzwhere",
  "_id": "tzwhere@1.0.0",
  "_from": "tzwhere@~1.0.0"
}
